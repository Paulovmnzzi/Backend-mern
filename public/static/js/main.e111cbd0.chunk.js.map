{"version":3,"sources":["redux/types/types.js","redux/reducers/uiReducer.js","redux/reducers/calendarReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","hooks/useForm.js","helpers/fetch.js","redux/actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","redux/actions/ui.js","helpers/prepareEvents.js","redux/actions/eventsCalendar.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","cheking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","_id","filter","id","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","base_url","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","user","checkingFinish","logout","LoginScreen","dispatch","useDispatch","lemail","lpassword","formValues","remail","rpassword","rpassword2","rname","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","console","log","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventLoading","eventUpdated","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","setFormValues","useEffect","toString","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","contentLabel","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","startAddNew","format","amPmAriaLabel","autoComplete","rows","AddNewFab","DeleteEventFab","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","localizer","momentLocalizer","CalendarScreen","eventos","components","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","startAccessor","height","PrivateRoutes","isAuthenticated","Component","component","rest","props","to","PublicRoutes","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e111cbd0.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '@@[UI] Open Modal',\r\n    uiCloseModal: '@@[UI] Close Modal',\r\n\r\n    eventAddNew: '@@[Event] Add New', \r\n    eventStartAddNew: '@@[Event] Start Add New', \r\n    eventSetActive: '@@[Event] Set active', \r\n    eventClearActiveEvent: '@@[Event] Clear event', \r\n    eventUpdated: '@@[Event] Update event', \r\n    eventDeleter: '@@[Event] Delete event', \r\n    eventLoaded: '@@[Event] Delete loaded', \r\n\r\n\r\n    authChecking: '@@[Auth] Cheking login state',\r\n    authCheckingFinish: '@@[Auth] Cheking finish',\r\n    authStartLogin: '@@[Auth] Start Login',\r\n    authLogin: '@@[Auth] Login',\r\n    authStartRegister: '@@[Auth] Start Register',\r\n    authStartTokenRenew: '@@[Auth] Start Token Renew',\r\n    authLogout: '@@[Auth] Logout',\r\n\r\n\r\n\r\n\r\n}","import { types } from './../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n}","import { types } from './../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaño feli',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(40, 'hours').toDate(),\r\n//     user: {\r\n//         id: 1235,\r\n//         name: 'Paulo'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew: \r\n        return {\r\n            ...state,\r\n            events: [\r\n                ...state.events, //desestructuro todos los eventos\r\n                action.payload //y le sumo el action payload\r\n                //tenemos un nuevo event, pero con toda la info\r\n            ]\r\n        }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state, \r\n                events: state.events.map(\r\n                    e => (e._id === action.payload._id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleter: \r\n        return {\r\n            ...state,\r\n            events: state.events.filter(\r\n                e => (e.id !== state.activeEvent.id) \r\n            ),\r\n            activeEvent: null\r\n        }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from './../types/types';\r\n\r\n\r\nconst initialState = {\r\n    cheking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                cheking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                cheking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                cheking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n    \r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from './../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware ( thunk )\r\n))","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => setValues(initialState);\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset]\r\n\r\n}","\r\nconst base_url = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${base_url}/${endpoint}`\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${base_url}/${endpoint}`\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type' : 'application/json',\r\n                \"x-token\": token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\"\r\nimport { types } from './../types/types';\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) { //este body.ok lo definimos en el backend con true or false dependiendo la situación \r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\nconst login = (user) => ({\r\n\r\n    type: types.authLogin,\r\n    payload: user\r\n\r\n})\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout,\r\n})\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport '../../styles/components/login.css'\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { startLogin, startRegister } from './../../redux/actions/auth';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        lemail: 'p4ulo@gmail.com',\r\n        lpassword: 'p4ulo123'\r\n    });\r\n   \r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        remail: 'p4ulo@gmail.com',\r\n        rpassword: 'p4ulo123',\r\n        rpassword2: 'p4ulo123',\r\n        rname: 'Paulo',\r\n    });\r\n\r\n    const {remail, rpassword, rpassword2, rname} = formRegisterValues;\r\n    const {lemail, lpassword} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lemail, lpassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(rpassword2 !== rpassword){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n        dispatch(startRegister(remail, rpassword, rname));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control login_inputs\"\r\n                                placeholder=\"Correo\"\r\n                                name= 'lemail'\r\n                                value= {lemail}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control login_inputs\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lpassword'\r\n                                value={lpassword}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit login_inputs\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control login_inputs\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rname'\r\n                                value={rname}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control login_inputs\"\r\n                                placeholder=\"Correo\"\r\n                                name='remail'\r\n                                value={remail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control login_inputs\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rpassword'\r\n                                value={rpassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control login_inputs\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='rpassword2'\r\n                                value={rpassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit login_inputs\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../redux/actions/auth';\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4 px-2'>\r\n            {name &&  <span className='navbar-brand'>{name}</span>}\r\n\r\n            <button className='btn  btn-outline-danger' onClick={handleLogout}>\r\n                <i className='fa-solid fa-right-from-bracket me-1'></i>\r\n                <span>Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nconst CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div className='single-event'>\r\n            <span>{title} -  </span>\r\n            <strong>{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","\r\nimport { types } from './../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import moment from 'moment'\r\n\r\nexport const prepareEvents = ( events ) => {\r\n\r\n    console.log(events)\r\n\r\n    return events.map( e => ({\r\n        ...e, \r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }));\r\n}","\r\nimport { fetchConToken } from '../../helpers/fetch';\r\nimport { types } from './../types/types';\r\nimport { prepareEvents } from './../../helpers/prepareEvents';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const startAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events/new', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if (body.ok) {\r\n\r\n                event.id = body.evento._id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event))\r\n            }\r\n\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\n\r\nexport const eventDeleter = () => ({ type: types.eventDeleter });\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.eventos);\r\n            \r\n            console.log(events)\r\n\r\n            dispatch(eventLoading(events));\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventLoading = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const startUpdateEvent = (event) => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event._id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n                Swal.fire(\"Evento actualizado\", body.msg, \"success\")\r\n            }else{\r\n                Swal.fire(\"Unauthorized\", body.msg, \"error\")\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const startDeleteEvent = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {activeEvent: event} = getState().calendar\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event._id}`, {} ,'DELETE');\r\n            const body = await resp.json();\r\n            \r\n            console.log(body)\r\n            console.log(event)\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleter(event));\r\n                Swal.fire(\"Evento eliminado\", body.msg, \"success\")\r\n            }else{\r\n                Swal.fire(\"Unauthorized\", body.msg, \"error\")\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\n// import moment from 'moment';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../redux/actions/ui';\r\nimport { eventClearActiveEvent, startAddNew, startUpdateEvent } from './../../redux/actions/eventsCalendar';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours')\r\n\r\n\r\nconst initEvent = {\r\n    title: 'Evento',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        }else {\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: [target.value].toString(),\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha de finalización debe ser mayor a la de inicio', 'error')\r\n        }\r\n\r\n        if (title.toString().trim().length < 2) {\r\n            setTitleValid(false);\r\n        }\r\n\r\n        //grabación en base de datos.\r\n        if(activeEvent){\r\n            dispatch(startUpdateEvent(formValues));\r\n        } else {\r\n            dispatch(startAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n        const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={800}\r\n            contentLabel=\"Example Modal\"\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <strong>Fecha y hora inicio</strong>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <strong>Fecha y hora fin</strong>\r\n\r\n                    <div className='calendar-modal'>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={dateEnd}\r\n                            format=\"y-MM-dd h:mm:ss a\"\r\n                            amPmAriaLabel=\"Select AM/PM\"\r\n                            className='form-control'\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <strong>Titulo y notas</strong>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CalendarModal\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from './../../redux/actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleNewModal = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn-outline-primary btn fab'\r\n            onClick={handleNewModal}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent, startDeleteEvent } from './../../redux/actions/eventsCalendar';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleEventDelete = () => {\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(startDeleteEvent())\r\n                dispatch(eventClearActiveEvent())\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={handleEventDelete}\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n            {/* <span>  Borrar evento</span> */}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect } from 'react'\r\nimport Navbar from '../ui/Navbar'\r\nimport moment from 'moment'\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport { messages } from './../../helpers/calendar-messages';\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport CalendarEvent from './CalendarEvent'\r\nimport CalendarModal from './CalendarModal'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\nimport { eventSetActive, eventStartLoading } from '../../redux/actions/eventsCalendar';\r\nimport AddNewFab from './../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\nimport { eventClearActiveEvent } from './../../redux/actions/eventsCalendar';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nconst CalendarScreen = () => {\r\n\r\n\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n        return true;\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        if (activeEvent) {\r\n            dispatch(eventClearActiveEvent())\r\n        }\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor:  (uid === event.user._id) ? '#367CF7' : '#465660' ,\r\n            borderRadius: '0px',\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div>\r\n                <Calendar\r\n                    components={{ event: CalendarEvent }}\r\n                    endAccessor=\"end\"\r\n                    events={events}\r\n                    eventPropGetter={eventStyleGetter}\r\n                    localizer={localizer}\r\n                    messages={messages}\r\n                    onDoubleClickEvent={onDoubleClick}\r\n                    onSelectEvent={onSelectEvent}\r\n                    onSelectSlot={onSelectSlot}\r\n                    selectable={true}\r\n                    // onView = {onViewChange}\r\n                    startAccessor=\"start\"\r\n                    style={{ height: '90vh' }}\r\n                // view={ lastView || 'month'}\r\n\r\n                />\r\n\r\n                <AddNewFab />\r\n\r\n                {activeEvent && <DeleteEventFab />}\r\n\r\n                <CalendarModal />\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n       <Route {...rest}\r\n            component={ props => (\r\n                isAuthenticated ? \r\n                <Component {...props} /> :\r\n                <Redirect to='/login' />\r\n            )}\r\n        \r\n       />\r\n    )\r\n}\r\n\r\nexport default PrivateRoutes\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PublicRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <>\r\n            <Route \r\n                {...rest}\r\n                component={ props => (\r\n                    isAuthenticated ?\r\n                    <Redirect to='/' /> :\r\n                    <Component {...props} />\r\n\r\n                )}\r\n            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PublicRoutes\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom'\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport { startCheking } from './../redux/actions/auth';\r\nimport PrivateRoutes from './PrivateRoutes';\r\nimport PublicRoutes from './PublicRoutes';\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cheking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(startCheking())\r\n\r\n    }, [dispatch])\r\n\r\n    if (cheking) {\r\n        return <h5>Wait..</h5>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoutes\r\n                            exact path='/login'\r\n                            component={LoginScreen}\r\n                            isAuthenticated = { !!uid } \r\n                            />\r\n                            {/* la doble negación de un string es true, y la doble negación de un null es false */}\r\n                        <PrivateRoutes\r\n                            exact\r\n                            path='/'\r\n                            component={CalendarScreen} \r\n                            isAuthenticated = { !!uid }\r\n                            /> \r\n                        <Redirect to='/login' />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nimport AppRouter from './routers/AppRouter';\r\nimport './styles.css'\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <>\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}